plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    // REST Docs
    id "org.asciidoctor.jvm.convert" version "4.0.2"
}

group = 'com.swyp10'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

ext {
    snippetsDir = file('build/generated-snippets')
    querydslDir = layout.buildDirectory.dir('generated/querydsl').get().asFile
    springCloudVersion = "2025.0.0"
}

dependencies {
    // Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Spring Batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    testImplementation 'org.springframework.batch:spring-batch-test'

    // MySQL JDBC Driver
    runtimeOnly 'com.mysql:mysql-connector-j'
    
    // H2 Database for testing
    testImplementation 'com.h2database:h2'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    
    // JSON Simple (for parsing OAuth responses)
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    // Swagger (springdoc)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // REST Docs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // Feign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.security:spring-security-test'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

}

tasks.named('test') {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

tasks.register('copyRestDocs', Copy) {
    dependsOn asciidoctor
    from asciidoctor.outputDir
    into 'src/main/resources/static/docs'
}

bootJar {
    dependsOn copyRestDocs
}

// QueryDSL 설정
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslDir]
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory = querydslDir
}

clean {
    delete querydslDir
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}
